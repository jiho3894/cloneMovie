{"version":3,"sources":["assets/no-poster.jpg","Components/Section.js","Components/Loader.js","Components/Error.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","Grid","Section","title","children","Loader","role","Text","span","Error","text","proptype","PropTypes","string","isRequired","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","componentDidMount","a","data","results","setState","this","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","match","push","history","pathname","location","includes","parseId","Number","Header","header","List","ul","li","current","SLink","Link","withRouter","RouterHandle","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31d2b2d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no-poster.31ee8645.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n  margin-bottom: 80px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 150px);\r\n  gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 50px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Loader = () => \r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>;\r\n\r\nexport default Loader;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Error = ({text}) => ( \r\n  <Container>\r\n    <Text>\r\n      {text}\r\n    </Text>\r\n  </Container>\r\n);\r\n\r\nError.proptype = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/no-poster.jpg\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 20)} . . .` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Error from 'Components/Error';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, \r\n  upcoming, \r\n  popular, \r\n  error, \r\n  loading }) => loading ? (<Loader/>) :\r\n  (<Container>\r\n    <Helmet>\r\n      <title>Movie | Nomflix</title>\r\n    </Helmet>\r\n    {nowPlaying && nowPlaying.length > 0 && (\r\n      <Section title=\"Now Playing\">\r\n        {nowPlaying.map(movie => (\r\n          <Poster\r\n          key={movie.id}\r\n          id={movie.id}\r\n          imageUrl={movie.poster_path}\r\n          title={movie.original_title}\r\n          rating={movie.vote_average}\r\n          year={movie.release_date.substring(0, 4)}\r\n          isMovie={true}\r\n        />  \r\n        ))}\r\n      </Section>\r\n    )}\r\n    {upcoming && upcoming.length > 0 && (\r\n      <Section title=\"Upcoming Movies\">\r\n        {upcoming.map(movie => (\r\n          <Poster\r\n          key={movie.id}\r\n          id={movie.id}\r\n          imageUrl={movie.poster_path}\r\n          title={movie.original_title}\r\n          rating={movie.vote_average}\r\n          year={movie.release_date.substring(0, 4)}\r\n          isMovie={true}\r\n        />  \r\n        ))}\r\n      </Section>\r\n    )}\r\n    {popular && popular.length > 0 && (\r\n      <Section title=\"Popular Movies\">\r\n        {popular.map(movie => (\r\n          <Poster\r\n          key={movie.id}\r\n          id={movie.id}\r\n          imageUrl={movie.poster_path}\r\n          title={movie.original_title}\r\n          rating={movie.vote_average}\r\n          year={movie.release_date.substring(0, 4)}\r\n          isMovie={true}\r\n        />  \r\n        ))}\r\n      </Section>\r\n    )}\r\n    {error && <Error text={error}/>}\r\n  </Container>);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from '../../api';\r\n\r\nexport default class HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount = async() => {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"영화를 찾지 못했습니다.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n      nowPlaying = {nowPlaying}\r\n      upcoming = {upcoming}\r\n      popular = {popular}\r\n      error = {error}\r\n      loading = {loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Error from 'Components/Error';\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, \r\n  popular, \r\n  airingToday, \r\n  error, \r\n  loading }) => loading ? (<Loader/>) : \r\n  <Container>\r\n    <Helmet>\r\n      <title>TV | Nomflix</title>\r\n    </Helmet>\r\n    {topRated && topRated.length > 0 && (\r\n      <Section title=\"Top Rated Shows\">\r\n      {topRated.map(show => (\r\n        <Poster\r\n          key={show.id}\r\n          id={show.id}\r\n          imageUrl={show.poster_path}\r\n          title={show.original_name}\r\n          rating={show.vote_average}\r\n          year={show.first_air_date.substring(0, 4)}\r\n        />\r\n      ))}\r\n    </Section>\r\n    )}\r\n    {popular && popular.length > 0 && (\r\n      <Section title=\"Popular Shows\">\r\n      {popular.map(show => (\r\n        <Poster\r\n          key={show.id}\r\n          id={show.id}\r\n          imageUrl={show.poster_path}\r\n          title={show.original_name}\r\n          rating={show.vote_average}\r\n          year={show.first_air_date.substring(0, 4)}\r\n        />\r\n      ))}\r\n    </Section>\r\n    )}\r\n    {airingToday &&airingToday.length > 0 && (\r\n      <Section title=\"Airing Today\">\r\n      {airingToday.map(show => (\r\n        <Poster\r\n          key={show.id}\r\n          id={show.id}\r\n          imageUrl={show.poster_path}\r\n          title={show.original_name}\r\n          rating={show.vote_average}\r\n          year={show.first_air_date.substring(0, 4)}\r\n        />\r\n      ))}\r\n    </Section>\r\n    )}\r\n    {error && <Error text={error}/>}\r\n  </Container>\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default TVPresenter;","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import { tvApi } from 'api';\r\nimport React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\n\r\nexport default class TVContainer extends React.Component{\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount = async() => {\r\n    try {\r\n      const {data : { results: topRated }} = await tvApi.topRated();\r\n      const {data : { results: popular }} = await tvApi.popular();\r\n      const {data : { results: airingToday }} = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    }\r\n    catch {\r\n      this.setState({\r\n        error: \"프로그램을 찾지 못했습니다.\"\r\n      });\r\n    } finally {\r\n      this.setState({loading : false});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return <TVPresenter\r\n    topRated = {topRated}\r\n    popular = {popular}\r\n    airingToday = {airingToday}\r\n    error = {error}\r\n    loading = {loading}\r\n    />;\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Error from 'Components/Error';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all:unset;\r\n  font-size: 30px;\r\n  width: 500px;\r\n`;\r\n\r\nconst SearchPresenter = ({ \r\n  movieResults, \r\n  tvResults, \r\n  error, \r\n  loading, \r\n  searchTerm, \r\n  updateTerm,\r\n  handleSubmit }) => (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Nomflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"Search...\" value={searchTerm} onChange={updateTerm}/>\r\n      </Form>\r\n      {loading ? (<Loader/>) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date ? movie.release_date.substring(0, 4) : \"\"}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"}\r\n              />\r\n            ))}\r\n          </Section>\r\n          )}\r\n          {error && <Error text={error} />}\r\n          {movieResults &&\r\n            tvResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Error text=\"Nothing Found\"/>\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  showResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  searchTerm : PropTypes.string,\r\n  handleSubmit : PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const { \r\n        data: { results: movieResults }} \r\n        = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"결과를 찾을 수 없습니다.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title> Loding | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.original_title} | Nomfilx</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/no-poster.jpg\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import { moviesApi, tvApi } from 'api';\r\nimport React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\n\r\nexport default class DetailContainer extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  componentDidMount = async() => {\r\n    const { match : { params: {id}}, \r\n    history: { push } ,\r\n    location: { pathname }}= this.props;\r\n    const { isMovie } = this.state;\r\n    this.isMovie = pathname.includes(\"/movie/\");\r\n    const parseId = Number(id);\r\n    if(!Number(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({data: result} = await moviesApi.movieDetail(parseId));\r\n      } else {\r\n        ({data: result} = await tvApi.showDetail(parseId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  } \r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter\r\n    result = {result}\r\n    error = {error}\r\n    loading = {loading}\r\n    />;\r\n  }\r\n}","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  background-color: rgba(20,20,20, 0.8);\r\n  box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n  z-index: 100;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width:50px;\r\n  height: 50px;\r\n  border-bottom: 5px solid \r\n  ${props => (props.current ? \"red\" : \"transparent\")};\r\n  transition: border-bottom 0.2s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  `;\r\n\r\nconst header = ({location : {pathname}}) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\n\r\nexport default withRouter(header);","import React from 'react';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\r\nimport Home from '../Routes/Home';\r\nimport TV from '../Routes/TV';\r\nimport Search from '../Routes/Search';\r\nimport Detail from '../Routes/Detail';\r\nimport Header from './Header';\r\n\r\nconst RouterHandle = () => (\r\n  <Router>\r\n    <>\r\n      <Header/>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" exact component={Detail} />\r\n        <Route path=\"/show/:id\" exact component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n\r\nexport default RouterHandle;","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n      <div>\n        <Router/>\n        <GlobalStyles/>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}